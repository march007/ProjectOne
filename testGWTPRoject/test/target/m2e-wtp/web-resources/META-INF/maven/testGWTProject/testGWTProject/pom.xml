<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>testGWTProject</groupId>
  <artifactId>testGWTProject</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  

  <properties>
		<!-- convenience to define GWT version in one place -->
		<gwt.version>2.0.4</gwt.version>
		<spring.version>3.0.4.RELEASE</spring.version>

		<!--  tell the compiler we can use 1.5 -->
		<maven.compiler.source>1.5</maven.compiler.source>
		<maven.compiler.target>1.5</maven.compiler.target>

	</properties>


	<dependencies>

		<!--  GWT dependencies (from central repo) -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>3.1.2.RELEASE</version>
		</dependency>		
		
		<!-- <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>2.0.5</version>
		</dependency> -->
		<!-- test -->
		<!-- <dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency> -->
	<dependency>
    	<groupId>org.springframework</groupId>
	    <artifactId>spring-context</artifactId>
	    <version>${spring.version}</version>
	</dependency>
	
	<dependency>
		<groupId>commons-dbcp</groupId>
		<artifactId>commons-dbcp</artifactId>
		<version>1.2.2</version>
	</dependency>
	
	
	<dependency> 
		<groupId>org.firebirdsql.jdbc</groupId> 
		<artifactId>jaybird</artifactId> 
		<version>2.1.6</version> 
	</dependency> 
	</dependencies>
	
		<build>
		<outputDirectory>war/WEB-INF/classes</outputDirectory>
		<!-- war/WEB-INF/classes -->
		


		<plugins>
			<!-- <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<goals>
						<goal>compile</goal>
               			 <goal>test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<runTarget>TestGWTPRoject.html</runTarget>
				</configuration> -->
				
<!--  			<plugin>
                <groupId>de.qu.maven.maven-plugins</groupId>
                <artifactId>copy-maven-plugin</artifactId>
                <version>1.0.3</version>
                <configuration>
                    <copyActions>                    
                        <copy-files>
                            <files>
                                <file>target/*.war</file>
                            </files>
                            <targetDirectory>C:/</targetDirectory>
                        </copy-files>
                    </copyActions>
                </configuration>
            </plugin> -->
            
<!--              <plugin> 
      <groupId>org.apache.maven.plugins</groupId> 
        <artifactId>maven-antrun-plugin</artifactId> 
            <configuration> 
              <tasks> 
              <echo message="hello ant, from Maven!"/>

		<copy file="D:/eclipse+worlspace/workspace/testGWTPRoject/target/testGWTProject-0.0.1-SNAPSHOT.war" 
		
		tofile="C:/" overwrite="true" />
<echo message="hello ant, from Maven!"/>
              </tasks> 
            </configuration> 
      </plugin>  -->

<!--  			<plugin>      
           		<groupId>de.qu.maven.maven-plugins</groupId>
                <artifactId>copy-maven-plugin</artifactId>
                <version>1.0.3</version>
                <executions>
                     <execution>
                            <phase>process-test-resources</phase>
                            <goals>
                                <goal>copy-files</goal>
                            </goals>
                            <configuration>
                                <copyActions>
                                    <copy-files>
                                        <files>
                                            <file>${basedir}/war/**/web.xml</file>
                                        </files>
                                        <targetDirectory>${user.dir}</targetDirectory>
                                    </copy-files>
                                </copyActions>
                            </configuration>
                        </execution>
                </executions>
            </plugin> -->
				
				
<plugin>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>gwt-maven-plugin</artifactId>
    <version>1.2</version>
    <executions>
        <execution>
            <goals>
                <goal>compile</goal>
                <goal>test</goal>
            </goals>
        </execution>
    </executions>
    <configuration>
        <runTarget>my.package.Application/Application.html</runTarget>
    </configuration>
</plugin>
   <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.0</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.handlers</resource>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.schemas</resource>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
       <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <!-- put your configurations here -->
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
			<!--
				If you want to use the target/web.xml file mergewebxml produces,
				tell the war plugin to use it. Also, exclude what you want from the
				final artifact here. <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId> <configuration>
				<webXml>target/web.xml</webXml>
				<warSourceExcludes>.gwt-tmp/**</warSourceExcludes> </configuration>
				</plugin>
			-->


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1-beta-1</version>
				<configuration>
					<warSourceDirectory>war</warSourceDirectory>
				</configuration>
			</plugin>

		</plugins>

	</build>
</project>